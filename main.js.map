{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_components/alert.component.ts","./src/app/_components/alert.component.html","./src/app/_content/app.less","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/_services/alert.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/booking.service.ts","./src/app/booking/booking.component.ts","./src/app/booking/booking.component.html","./src/app/configuration/configuration.component.ts","./src/app/configuration/configuration.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/reports/reports.component.ts","./src/app/reports/reports.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AlertService } from '../_services/alert.service';\n\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\nexport class AlertComponent implements OnInit, OnDestroy {\n    private subscription: Subscription;\n    message: any;\n\n    constructor(private alertService: AlertService) { }\n\n    ngOnInit() {\n        this.subscription = this.alertService.getAlert()\n            .subscribe(message => {\n                switch (message && message.type) {\n                    case 'success':\n                        message.cssClass = 'alert alert-success';\n                        break;\n                    case 'error':\n                        message.cssClass = 'alert alert-danger';\n                        break;\n                }\n\n                this.message = message;\n            });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}\n","<div *ngIf=\"message\" [ngClass]=\"message.cssClass\">{{message.text}}</div>\n","export default \"a {\\n  cursor: pointer;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYXZpLnZlcm1hL21vdmllLWJvb2tpbmctZnJvbnRlbmQvc3JjL2FwcC9fY29udGVudC9hcHAubGVzcyIsInNyYy9hcHAvX2NvbnRlbnQvYXBwLmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSxlQUFBO0FDQUYiLCJmaWxlIjoic3JjL2FwcC9fY29udGVudC9hcHAubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGdsb2JhbCBhcHBsaWNhdGlvbiBzdHlsZXNcbmEge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4iLCJhIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuIl19 */\";","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n      // add authorization header with jwt token if available\n      let currentUser = this.authenticationService.currentUserValue;\n      if (currentUser && currentUser.accessToken) {\n          request = request.clone({\n              setHeaders: {\n                  Authorization: `Bearer ${currentUser.accessToken}`\n              }\n          });\n      }\n\n      return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n    private subject = new Subject<any>();\n    private keepAfterRouteChange = false;\n\n    constructor(private router: Router) {\n        // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterRouteChange) {\n                    // only keep for a single route change\n                    this.keepAfterRouteChange = false;\n                } else {\n                    // clear alert message\n                    this.clear();\n                }\n            }\n        });\n    }\n\n    getAlert(): Observable<any> {\n        return this.subject.asObservable();\n    }\n\n    success(message: string, keepAfterRouteChange = false) {\n        this.keepAfterRouteChange = keepAfterRouteChange;\n        this.subject.next({ type: 'success', text: message });\n    }\n\n    error(message: string, keepAfterRouteChange = false) {\n        this.keepAfterRouteChange = keepAfterRouteChange;\n        this.subject.next({ type: 'error', text: message });\n    }\n\n    clear() {\n        // clear by calling subject.next() without parameters\n        this.subject.next();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConfigurationComponent } from './configuration/configuration.component';\nimport { ReportsComponent } from './reports/reports.component';\nimport { BookingComponent } from './booking/booking.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { BookingService } from './booking.service';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home/home.component';\n\n\n// const routes: Routes = [\n//   // {\n//   //   path: 'special',\n//   //   component: BookingComponent,\n//   //   // Add this to guard this route\n//   //   canActivate: [\n//   //     AuthGuard\n//   //   ]\n//   // },\n//   {path:\"booking\", component:BookingComponent},\n//   {path:\"reports\", component:ReportsComponent, canActivate: [ AuthGuard ]},\n//   {path:\"configuration\", component:ConfigurationComponent},\n//   { path: 'login', component: LoginComponent },\n//   { path: '**', redirectTo: '' }\n// ];\n\n// @NgModule({\n//   imports: [RouterModule.forRoot(routes),ReactiveFormsModule,CommonModule,FormsModule],\n//   exports: [RouterModule,ReactiveFormsModule,CommonModule,FormsModule],\n//   providers: [AuthGuard]\n// })\n// export class AppRoutingModule { }\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  {path:\"booking\", component:BookingComponent, canActivate: [AuthGuard]},\n  {path:\"reports\", component:ReportsComponent,canActivate: [AuthGuard]},\n  {path:\"configuration\", component:ConfigurationComponent,canActivate: [AuthGuard]},\n  // otherwise redirect to home\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n    providers: [AuthGuard]\n  })\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth/auth.service';\nimport { User } from './pojo/User';\nimport './_content/app.less';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Movie Magic';\n  currentUser: User;\n\n  constructor(\n      private router: Router,\n      private authenticationService: AuthService\n  ) {\n      this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  logout() {\n      this.authenticationService.logout();\n      this.router.navigate(['/login']);\n  }\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n\n<!-- <div style = \"text-align:center\">\n  <h1> Welcome to {{ title }}! </h1>\n</div>\n<app-home></app-home> -->\n\n\n<!-- nav -->\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"currentUser\">\n  <div class=\"navbar-nav\">\n      <a class=\"nav-item nav-link\" routerLink=\"/\">Home</a>\n      <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n  </div>\n</nav>\n\n<!-- main app container -->\n<div class=\"jumbotron\">\n  <div class=\"container\">\n      <div class=\"row\">\n          <div class=\"col-sm-6 offset-sm-3\">\n              <alert></alert>\n              <router-outlet></router-outlet>\n              <!-- <app-home></app-home> -->\n          </div>\n      </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { BookingComponent } from './booking/booking.component';\nimport { ReportsComponent } from './reports/reports.component';\nimport { ConfigurationComponent } from './configuration/configuration.component';\nimport { BookingService } from './booking.service';\nimport { AuthService } from './auth/auth.service';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { AlertComponent } from './_components/alert.component';\n\nimport {ErrorInterceptor} from './_helpers/error.interceptor';\nimport {JwtInterceptor} from './_helpers/jwt.interceptor';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BookingComponent,\n    ReportsComponent,\n    ConfigurationComponent,\n    LoginComponent,\n    AlertComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  // exports: [\n  //       FormsModule,\n  //   ReactiveFormsModule\n  // ],\n  providers: [BookingService,AuthService,\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthService\n) {}\n\ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n        // authorised so return true\n        return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n    return false;\n}\n}\n","import { Injectable } from '@angular/core';\nimport * as auth0 from 'auth0-js';\nimport { environment } from './../../environments/environment';\nimport { Router } from '@angular/router';\nimport { throwError, BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient, HttpErrorResponse,HttpParams } from '@angular/common/http';\n// import { Cookie } from 'ng2-cookies/ng2-cookies';\nimport {  CookieService  } from 'ngx-cookie-service';\nimport { map } from 'rxjs/operators';\nimport {User} from '../pojo/User'\n\n(window as any).global = window;\n\n@Injectable()\nexport class AuthService {\n  private apiurl = \"http://localhost:9200/movie-service/api/v1/oauth/token\";\n\nprivate currentUserSubject: BehaviorSubject<User>;\n    public currentUser: Observable<User>;\n\n    constructor(private http: HttpClient) {\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue(): User {\n        return this.currentUserSubject.value;\n    }\n\n    login(username, password) {\n      const params = new HttpParams()\n      .set(\"username\", username)\n      .set(\"password\", password);\n        return this.http.post<any>( this.apiurl,null,{params})\n            .pipe(map(user => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                this.currentUserSubject.next(user);\n                return user;\n            }));\n    }\n\n    logout() {\n        // remove user from local storage and set current user to null\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingService {\n\n  private finaldata = [];\n  private apiurl = \"http://jsonplaceholder.typicode.com/users\";\n constructor(private http: HttpClient) { }\n\n  showTodayDate() {\n    let ndate = new Date();\n    return ndate;\n }\n\n getData() {\n    // return this.http.get(this.apiurl);\n }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BookingService } from '../booking.service';\n\n@Component({\n  selector: 'app-booking',\n  templateUrl: './booking.component.html',\n  styleUrls: ['./booking.component.css']\n})\nexport class BookingComponent implements OnInit {\n  todaydate;\n  public persondata = [];\n  constructor(private bookingSvc: BookingService) { }\n\n  ngOnInit() {\n    this.todaydate = this.bookingSvc.showTodayDate();\n  //   this.bookingSvc.getData().subscribe((data) => {\n  //     this.persondata = Array.from(Object.keys(data), k=>data[k]);\n  //     console.log(this.persondata);\n  //  });\n  }\n\n}\n","<p>booking works!</p>\n{{todaydate}}\n\n<ul>\n  <li *ngFor=\"let item of persondata; let i = index\">\n     {{item.name}} : {{item.email}}\n  </li>\n</ul>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-configuration',\n  templateUrl: './configuration.component.html',\n  styleUrls: ['./configuration.component.css']\n})\nexport class ConfigurationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>configuration works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../auth/auth.service';\nimport { User } from '../pojo/User';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  currentUser: User;\n  users = [];\n\n  constructor(\n      private authenticationService: AuthService,\n  ) {\n      this.currentUser = this.authenticationService.currentUserValue;\n  }\n\n  ngOnInit() {\n  }\n}\n","\n<h1>Hi {{currentUser.username}}!</h1>\n<h2>Select your option</h2>\n<!-- <p>You're logged in with Angular 8!!</p> -->\n<!-- <h3>All registered users:</h3> -->\n\n<nav>\n   <a routerLink = \"/booking\">Booking</a>\n   <a routerLink = \"/reports\">Reports </a>\n   <a routerLink = \"/configuration\">Configuration </a>\n</nav>\n<!-- <h1>Angular 7 Routing Demo</h1> -->\n<!-- <nav>\n   <a routerLink = \"/booking\">Booking</a>\n   <a routerLink = \"/reports\">Reports </a>\n   <a routerLink = \"/configuration\">Configuration </a>\n</nav>\n<router-outlet></router-outlet> -->\n\n\n<!--\n<div> Months :\n  <select>\n     <option *ngFor = \"let i of months\">{{i}}</option>\n  </select>\n</div>\n<br/>\n\n<div>\n  <span *ngIf = \"isavailable; then condition1 else condition2\">\n     Condition is valid.\n  </span>\n  <ng-template #condition1>Condition is valid</ng-template>\n  <ng-template #condition2>Condition is invalid</ng-template>\n</div>\n<button (click) = \"myClickFunction($event)\">\n  Click Me\n</button> -->\n\n\n<!-- <h1 *ngIf=\"!userName\">Welcome!</h1>\n<h1 *ngIf=\"userName\">Hello, !</h1>\n<p>Welcome to this demo-application.</p>\n<p>\n    <button (click)=\"login()\" class=\"btn btn-default\">Login</button>\n    <button (click)=\"logout()\" class=\"btn btn-default\">Logout</button>\n</p>\n<p>\n    Username/Passwort: max/geheim\n</p> -->\n\n<!-- <div class=\"container\" >\n\t    <button *ngIf=\"!isLoggedIn()\" class=\"btn btn-primary\" (click)=\"login()\" type=\"submit\">\n\t      Login</button>\n\t    <div *ngIf=\"isLoggedIn()\" class=\"content\">\n\t      <span>Welcome Ravi !!</span>\n\t      <a class=\"btn btn-default pull-right\"(click)=\"logout()\" href=\"#\">Logout</a>\n\t       <br/> -->\n\t      <!-- <foo-details></foo-details> -->\n\t    <!-- </div>\n\t  </div> -->\n\n\n\n    <!-- <form fxFill #Login=\"ngForm\" (ngSubmit)=\"onsubmit()\">\n      <div nz-row>\n          <div nz-col nzMd=\"12\" nzXs=\"24\">\n              <hr />\n              <nz-form-item>\n                  <nz-input-group>\n                      <div nz-col nzMd=\"11\" nzXs=\"8\">\n                          <nz-input-group nzPrefixIcon=\"user\">\n                              <input type=\"text\" nz-input name=\"Login_name\" placeholder=\"User Name\" id=\"userName\"\n\n  #userName=\"ngModel\" [(ngModel)]=\"Obj.username\">\n                              </nz-input-group>\n                              <div *ngIf=\"Login.submitted && userName.errors\" style=\"color: red\">\n                                  <div *ngIf=\"userName.hasError('required')\">\n\n  Login ID is required\n\n  </div>\n                              </div>\n                          </div>\n                      </nz-input-group>\n                  </nz-form-item>\n                  <nz-form-item>\n                      <div nz-col nzMd=\"11\" nzXs=\"8\">\n                          <nz-input-group nzPrefixIcon=\"lock\">\n                              <input type=\"password\" nz-input name=\"user_password\" placeholder=\"Password\"\n\n  id=\"password\" #password=\"ngModel\" [(ngModel)]=\"Obj.password\">\n                              </nz-input-group>\n                              <div *ngIf=\"Login.submitted && password.errors\" style=\"color: red\">\n                                  <div *ngIf=\"password.hasError('required')\">\n\n  Password is required\n\n  </div>\n                              </div>\n                          </div>\n                      </nz-form-item>\n                      <div class=\"button\">\n                          <button nz-button nzType=\"primary\">\n\n  submit\n\n  </button>\n                      </div>\n                  </div>\n              </div>\n          </form> -->\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport {  AuthService } from '../auth/auth.service';\nimport { AlertService } from '../_services/alert.service';\n\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthService,\n        private alertService: AlertService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n}\n","<h2>Login</h2>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.username.errors.required\">Username is required</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Login\n        </button>\n        <!-- <a routerLink=\"/register\" class=\"btn btn-link\">Register</a> -->\n    </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.css']\n})\nexport class ReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>reports works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n//   auth: {\n//     clientID: 'YOUR-AUTH0-CLIENT-ID',\n//     domain: 'http://localhost:9200', // e.g., https://you.auth0.com/\n//     audience: 'YOUR-AUTH0-API-IDENTIFIER', // e.g., http://localhost:3001\n//     redirect: 'http://localhost:4200/booking',\n//     scope: 'openid profile email'\n//   }\n};\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}